services:
  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: api_service
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: secret
      MYSQL_DB: access_control
      KAFKA_BROKER: kafka:9092
    depends_on:
      - mysql
      - kafka
    volumes:
      - .:/app
    command: uvicorn backend.app:app --host 0.0.0.0 --port 8000 --reload

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: access_control
      MYSQL_USER: admin_api
      MYSQL_PASSWORD: admin123
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_service
    ports:
      - "5173:80"
    depends_on:
      - api

volumes:
  mysql_data:
